//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\zach1\Desktop\School\classes\C#\ConsoleApplication3\ConsoleApplication3\css.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ConsoleApplication3 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class cssLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, SIGN=5, OFFSET=6, GROUP=7, VAR=8, Variable=9, 
		HEX=10, WORD=11, ID=12, NUMBER=13, WHITESPACE=14;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "DIGIT", "LETTER", "SIGN", "OFFSET", "GROUP", 
		"VAR", "Variable", "HEX", "WORD", "ID", "NUMBER", "WHITESPACE"
	};


	public cssLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'{'", "'}'", "'='", null, "'Offset'", "'Group'", "'Var'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, "SIGN", "OFFSET", "GROUP", "VAR", "Variable", 
		"HEX", "WORD", "ID", "NUMBER", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "css.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x10n\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3"+
		"\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n"+
		"\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x6\f\x45\n\f\r"+
		"\f\xE\f\x46\x3\r\x3\r\x3\r\x3\r\x3\r\x6\rN\n\r\r\r\xE\rO\x3\xE\x3\xE\x3"+
		"\xE\x6\xEU\n\xE\r\xE\xE\xEV\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\a\xF^\n\xF\f"+
		"\xF\xE\xF\x61\v\xF\x3\x10\x6\x10\x64\n\x10\r\x10\xE\x10\x65\x3\x11\x6"+
		"\x11i\n\x11\r\x11\xE\x11j\x3\x11\x3\x11\x2\x2\x2\x12\x3\x2\x3\x5\x2\x4"+
		"\a\x2\x5\t\x2\x6\v\x2\x2\r\x2\x2\xF\x2\a\x11\x2\b\x13\x2\t\x15\x2\n\x17"+
		"\x2\v\x19\x2\f\x1B\x2\r\x1D\x2\xE\x1F\x2\xF!\x2\x10\x3\x2\t\x3\x2\x32"+
		";\x4\x2\x43\\\x63|\x4\x2--//\x4\x2\x43H\x63h\x4\x2\'\'//\x4\x2%%\x30\x30"+
		"\x5\x2\v\f\xF\xF\"\"v\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2"+
		"\x2\x2\t\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2"+
		"\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B"+
		"\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x3"+
		"#\x3\x2\x2\x2\x5%\x3\x2\x2\x2\a\'\x3\x2\x2\x2\t)\x3\x2\x2\x2\v+\x3\x2"+
		"\x2\x2\r-\x3\x2\x2\x2\xF/\x3\x2\x2\x2\x11\x31\x3\x2\x2\x2\x13\x38\x3\x2"+
		"\x2\x2\x15>\x3\x2\x2\x2\x17\x42\x3\x2\x2\x2\x19H\x3\x2\x2\x2\x1BT\x3\x2"+
		"\x2\x2\x1DX\x3\x2\x2\x2\x1F\x63\x3\x2\x2\x2!h\x3\x2\x2\x2#$\a=\x2\x2$"+
		"\x4\x3\x2\x2\x2%&\a}\x2\x2&\x6\x3\x2\x2\x2\'(\a\x7F\x2\x2(\b\x3\x2\x2"+
		"\x2)*\a?\x2\x2*\n\x3\x2\x2\x2+,\t\x2\x2\x2,\f\x3\x2\x2\x2-.\t\x3\x2\x2"+
		".\xE\x3\x2\x2\x2/\x30\t\x4\x2\x2\x30\x10\x3\x2\x2\x2\x31\x32\aQ\x2\x2"+
		"\x32\x33\ah\x2\x2\x33\x34\ah\x2\x2\x34\x35\au\x2\x2\x35\x36\ag\x2\x2\x36"+
		"\x37\av\x2\x2\x37\x12\x3\x2\x2\x2\x38\x39\aI\x2\x2\x39:\at\x2\x2:;\aq"+
		"\x2\x2;<\aw\x2\x2<=\ar\x2\x2=\x14\x3\x2\x2\x2>?\aX\x2\x2?@\a\x63\x2\x2"+
		"@\x41\at\x2\x2\x41\x16\x3\x2\x2\x2\x42\x44\a&\x2\x2\x43\x45\x5\r\a\x2"+
		"\x44\x43\x3\x2\x2\x2\x45\x46\x3\x2\x2\x2\x46\x44\x3\x2\x2\x2\x46G\x3\x2"+
		"\x2\x2G\x18\x3\x2\x2\x2HI\a\x32\x2\x2IJ\az\x2\x2JM\x3\x2\x2\x2KN\x5\v"+
		"\x6\x2LN\t\x5\x2\x2MK\x3\x2\x2\x2ML\x3\x2\x2\x2NO\x3\x2\x2\x2OM\x3\x2"+
		"\x2\x2OP\x3\x2\x2\x2P\x1A\x3\x2\x2\x2QU\x5\r\a\x2RU\t\x6\x2\x2SU\x5\x1F"+
		"\x10\x2TQ\x3\x2\x2\x2TR\x3\x2\x2\x2TS\x3\x2\x2\x2UV\x3\x2\x2\x2VT\x3\x2"+
		"\x2\x2VW\x3\x2\x2\x2W\x1C\x3\x2\x2\x2XY\t\a\x2\x2Y_\x5\r\a\x2Z^\x5\r\a"+
		"\x2[^\x5\v\x6\x2\\^\a/\x2\x2]Z\x3\x2\x2\x2][\x3\x2\x2\x2]\\\x3\x2\x2\x2"+
		"^\x61\x3\x2\x2\x2_]\x3\x2\x2\x2_`\x3\x2\x2\x2`\x1E\x3\x2\x2\x2\x61_\x3"+
		"\x2\x2\x2\x62\x64\x5\v\x6\x2\x63\x62\x3\x2\x2\x2\x64\x65\x3\x2\x2\x2\x65"+
		"\x63\x3\x2\x2\x2\x65\x66\x3\x2\x2\x2\x66 \x3\x2\x2\x2gi\t\b\x2\x2hg\x3"+
		"\x2\x2\x2ij\x3\x2\x2\x2jh\x3\x2\x2\x2jk\x3\x2\x2\x2kl\x3\x2\x2\x2lm\b"+
		"\x11\x2\x2m\"\x3\x2\x2\x2\f\x2\x46MOTV]_\x65j\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace ConsoleApplication3
